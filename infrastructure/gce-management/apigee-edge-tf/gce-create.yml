---
- name: Create infrastructure
  hosts: localhost
  vars_prompt:
    - name: project_path
      prompt: "Which project do you want to build? ['5-node','aio','dev','prod']"
      default: "5-node"
      private: no

    - name: region
      prompt: "Default Region"
      default: "us-east1"
      private: no

    - name: zone
      prompt: "Default Zone"
      default: "us-east1-b"
      private: no

    - name: gcp_credentials_file
      prompt: "Service Account Credentials File Path"
      default: "{{ '~/.apigee-secure/sandbox-1f5fb288d552.json' | expanduser }}"
      private: no

    - name: gcp_project_name
      prompt: "GCP Project Name"
      default: "sandbox-173316"
      private: no

    - name: service_account_email
      prompt: "Service Account Email"
      default: "736255665193-compute@developer.gserviceaccount.com"
      private: no

  vars:
    terraform_workspace: "{{ playbook_dir }}/terraform_workspace"
    terraform_version: "0.12.5"
    terraform_download_links:
      Debian: "https://releases.hashicorp.com/terraform/{{ terraform_version }}/terraform_{{ terraform_version }}_linux_amd64.zip"
      MacOSX: "https://releases.hashicorp.com/terraform/{{ terraform_version }}/terraform_{{ terraform_version }}_darwin_amd64.zip"

  tasks:
    - name: Install archive managment packages
      become: true
      package:
        name: "unzip"
        state: present
      when: ansible_distribution != "MacOSX"

    - name: Install archive managment packages
      package:
        name: "unzip"
        state: present
      when: ansible_distribution == "MacOSX"

    - name: Set terraform link
      set_fact:
        terraform_download_link: "{{ terraform_download_links[ansible_distribution] }}"

    - name: Download Terraform binary
      get_url:
        url: "{{ terraform_download_link }}"
        dest: "./{{ terraform_download_link | basename }}"

    - name: Unarchive terraform binary
      unarchive:
        src: "{{ terraform_download_link | basename }}"
        dest: ./
        remote_src: yes

    - name: Create terraform workspace folder
      file:
        path: "{{ terraform_workspace }}"
        state: directory

    - name: Create infrastructure
      terraform:
        binary_path: "{{ playbook_dir }}/terraform"
        project_path: "{{ playbook_dir }}/{{ project_path }}"
        force_init: true
        state: present
        workspace: "{{ terraform_workspace }}"
        state_file: "{{ playbook_dir }}/terraform.tfstate"
        variables:
          region: "{{ region }}"
          zone: "{{ zone }}"
          credentials_file: "{{ gcp_credentials_file }}"
          gcp_project_name: "{{ gcp_project_name }}"
          service_account_email: "{{ service_account_email }}"

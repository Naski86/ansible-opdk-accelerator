---
- name: Configure SSH for a remote user
  hosts: '{{ target_hosts }}'
  gather_facts: no

  vars:
    pubkey: '~/.ssh/id_rsa.pub'
    pvtkey: '~/.ssh/id_rsa'

  tasks:
  - block:
    - name: Get current user if remote_user not provided
      shell: whoami
      register: whoami

    - name:  Set remote_user
      set_fact:
        remote_user: "{{ whoami.stdout }}"

    - name: Determine state of public key
      stat:
        path: "{{ pubkey }}"
      register: pubkey_state

    delegate_to: localhost

  - block:
    - name: Assert availability of openssh
      yum:
        name: openssh
        state: present

    - name: Generate SSH keys
      shell: ssh-keygen -b 2048 -t rsa -f {{ pvtkey }} -q -N ""
      args:
        creates: "{{ pvtkey }}"

    delegate_to: localhost
    when: not pubkey_state.stat.exists

  - name: Assert state of public key
    stat:
      path: "{{ pubkey }}"
    register: pubkey_state

  - name: Copy local public keys to server for user {{ user }}
    tags: ['copy-keys']
    authorized_key:
      user: '{{ remote_user }}'
      state: present
      key: "{{ lookup('file', '{{ pubkey }}') }}"
    when: pubkey_state.stat.exists is defined

  - name: Enable root login over SSH
    become: yes
    lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      line: 'PermitRootLogin yes'
      backrefs: yes
    notify:
    - Restart SSH service

  - name: Enable Root with no Password Prompt
    lineinfile:
      state: present
      dest: /etc/sudoers
      line: "{{ item }}"
      backrefs: yes
    with_items:
      - "Defaults !requiretty"
      - "root ALL=NOPASSWD:ALL"

#  - name: Enable Default requiretty
#    lineinfile:
#      state: present
#      dest: /etc/sudoers
#      regexp: '(^#)(Defaults.*requiretty)'
#      line: 'Defaults !requiretty'
#      backrefs: yes
#    notify:
#    - Restart SSH service
#    when: remote_user == 'root'

  handlers:
  - name: Restart SSH service
    service:
      name: sshd
      state: restarted
